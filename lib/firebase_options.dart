// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:mynotes/auth/secrets.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: WEB_API_KEY,
    appId: WEB_APP_ID,
    messagingSenderId: WEB_MESSAGING_SENDER_ID,
    projectId: WEB_PROJECT_ID,
    authDomain: WEB_AUTH_DOMAIN,
    storageBucket: WEB_STORAGE_BUCKET,
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: ANDROID_API_KEY,
    appId: ANDROID_APP_ID,
    messagingSenderId: ANDROID_MESSAGING_SENDER_ID,
    projectId: ANDROID_PROJECT_ID,
    storageBucket: ANDROID_STORAGE_BUCKET,
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: IOS_API_KEY,
    appId: IOS__APP_ID,
    messagingSenderId: IOS_MESSAGING_SENDER_ID,
    projectId: IOS_PROJECT_ID,
    storageBucket: IOS_STORAGE_BUCKET,
    iosClientId: IOS_IOS_CLIENT_ID,
    iosBundleId: IOS_BUNDLE_ID,
  );
}
